Program ::= ProgramStatement*
ProgramStatement ::= DllImportStatement | DefineStatement 
DllImportStatement ::= 'dllimport' TypeName Identifier '(' (TypeName? (',' TypeName)*)? ')' '{' Identifier '.dll' ',' Identifier '}'
DefineStatement ::= 'define' TypeName Identifier '(' ((Identifier TypeName)? (',' Identifier TypeName)*)? ')' Block

TypeName ::= ('Int' ('8' | '16' | '32' | '64') | 'Float' | 'Double') ('*')?

Block ::= '{' (Statement)* '}'

Statement ::= KeywordStatement | Declaration | ExpressionStatement
KeywordStatement ::= ReturnStatement | IfStatement | ForLoop

ReturnStatement ::= 'return' Expression
IfStatement ::= 'if' '(' Expression ')' Block ('else if' '(' Expression ')' Block)* ('else' Block)?
ForLoop ::= 'for' '(' (Declaration | Expression) ',' Expression ',' Expression ')' Block

Declaration ::= TypeName Identifier (':=' Expression)?
ExpressionStatement ::= Expression

Expression ::= CallExpression | BinaryExpression | UnaryExpression | Grouping | Identifier | Number | String
CallExpression ::= Identifier Grouping
BinaryExpression ::= Expression BinaryOperator Expression
UnaryExpression ::= PrefixOperator Expression | Expression PostfixOperator
Grouping ::= '(' (Expression (',' Expression)*)? ')'
Identifier ::= [a-zA-Z] [0-9a-zA-Z]*
Number ::= Integer | Decimal | Hex | Octal | Binary
String ::= '"' ASCIICharacter* '"'

BinaryOperator ::= AssignmentOperator | LogicOperator | EqualityOperator | ComparisonOperator | AdditionOperator | DivisionOperator | BitwiseOperator
PrefixOperator ::= '!' | '~' | '*' | '&' | '-' | '++' | '--'
PostfixOperator ::= '++' | '--'

Integer ::= [0-9]*
Decimal ::= Integer '.' Integer
Hex ::= '0x' [0-9a-fA-F]*
Octal ::= '0o' [0-7]*
Binary ::= '0b' [0-1]*

AssignmentOperator ::= ':=' | '+=' | '-=' | '*='
LogicOperator ::= '&&' | '||'
EqualityOperator ::= '=' | '==' | '!='
ComparisonOperator ::= '<' | '<=' | '>' | '>='
AdditionOperator ::= '+' | '-'
DivisionOperator ::= '/' | '*' | '%'
BitwiseOperator ::= '&' | '~' | '|' | '^'