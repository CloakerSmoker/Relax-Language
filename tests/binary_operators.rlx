#Require ./src/lib/Console.rlx

struct DumbTest {
	i8 IdiotField,
	void Dummy
}

define i32 Main() {
	Print(20 + 10)
	PrintCharacter(',')
	Print(20 - 10)
	PrintCharacter(',')
	Print(20 * 10)
	PrintCharacter(',')
	Print(20 / 10)
	PrintCharacter(',')
	Print(22 % 10)
	PrintCharacter(',')
	Print(20 & 30)
	PrintCharacter(',')
	Print(20 | 10)
	PrintCharacter(',')
	Print(20 ^ 10)
	PrintCharacter(',')
	Print(0 && 0)
	Print(0 && 1)
	Print(1 && 0)
	Print(1 && 1)
	PrintCharacter(',')
	Print(0 || 0)
	Print(0 || 1)
	Print(1 || 0)
	Print(1 || 1)
	PrintCharacter(',')
	Print(1 << 20)
	PrintCharacter(',')
	Print(1 << 20 >> 20)
	PrintCharacter(',')
	
	/* Todo: Write unary_operators.rlx and move these into that file */
	Print(~0)
	PrintCharacter(',')
	Print(~90 + 1)
	
	DumbTest D
	DumbTest* DP := &D
	
	PrintCharacter(',')
	Print(DP->IdiotField || false)
	Print(DP->IdiotField && true)
	
	PrintCharacter(',')
	Print(#i8)
	PrintCharacter(',')
	Print(#i16)
	PrintCharacter(',')
	Print(#i32)
	PrintCharacter(',')
	Print(#i64)
	PrintCharacter(',')
	Print(#i8*)
	PrintCharacter(',')
	Print(#DumbTest)
	
	
	PrintCharacter(' ')
	
	i32 Com := 0
	
	Com += 5
	Com -= 3
	
	Print(Com) /* 2 */
	PrintCharacter(',')
	
	Com *= 10 	/* 20 */
	Com /= 5	/* 4 */
	
	Print(Com)
	PrintCharacter(',')
	
	Com %= 3	/* 1 */
	
	Print(Com)
	PrintCharacter(',')
	
	Com |= 0xFF02	/* 0xFF03 */
	Com &= 0xFF		/* 3 */
	Print(Com)
	PrintCharacter(',')
	
	Com ^= 1	/* 2 */
	Print(Com)
	
	/* Assignment operators result in: 2, 4, 1, 3, 2 */
	
	return 1 >> 127
}
