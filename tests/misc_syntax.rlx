#Include ./src/lib/Memory.rlx
#Include ./src/lib/String.rlx
#Include ./src/lib/Console.rlx

define void VATest(i32 T, i8 Q) {
	Print("Ocall ")
}

define void VATest(i64 T, ... Args) {
	Print("%x, %x ", T, Args[0])
	
	i32 C := Args[0] As i32
	Args += 8
	
	for (i32 I := 0, I < C, I += 1) {
		PrintHex(Args[I])
		
		if (C - 1 != I) {
			PrintLiteral(', ')
		}
	}
}

i64{20} GlobalArray

define void Dummy() {
	Print(",%i", GlobalArray[10])
}

struct Test {
	i64 A,
	i64 B
}

struct ExtraText {
	i8{200} Text
}

/* /* Nested */ comment /* c /* o /* m /* m */ e */ n */ t */ */

; /* /* Nested */ comment /* c /* o /* m /* m */ e */ n */ t */ */
;;;;;;;;;;;;; coment

/* /* Nested */ comment ;;;;;;; /* c /* o /* m /* m */ e */ n */ t */ */

define void* Test() {
	i32 L := 0
	
	return &L As void*
}
define i32 Test2() {
	return 1 << 2 & 10000000
}

define i32 Main() {
	PrintHex('aaaaaaaa') ; This flavor of comment should work
	PrintLiteral(', ')
	PrintHex('aaaaaaa');even without the whitespace
	PrintLiteral(', ')
	PrintHex('aaaaa')
	PrintLiteral(', ')
	PrintHex('aaaa')
	PrintLiteral(', ')
	PrintHex('aaa')
	PrintLiteral(', ')
	PrintHex('aa')
	PrintLiteral(', ')
	PrintHex('a')
	
	PrintLiteral(' ')
	
	VATest(10, 1)
	VATest(10, 1, 2, 3)
	
	PrintCharacter(' ')
	
	i8{90} test_array
	
	test_array[2] := 90
	test_array[89] := 20
	
	Print("%x,%i", test_array[2], test_array[89])
	
	GlobalArray[10] := 10
	Dummy()
	
	Print(",%i", #ExtraText)
	
	return 0
}
