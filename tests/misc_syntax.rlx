#Require "./src/lib/Console.rlx"
#Require "./src/lib/Console.rlx"
#Require "src/lib/Console.rlx"
#Require "$/Console.rlx"

declare void VATest(i32, i8)

define void VATest(i32 T, i8 Q) {
	Print("Ocall ")
}

declare void VATest(i32, i8)

define void VATest(i64 T, ... Args) {
	Print("%x, %x ", T, Args[0])
	
	i32 C := Args[0] As i32
	Args += 8
	
	for (i32 I := 0, I < C, I += 1) {
		PrintHex(Args[I])
		
		if (C - 1 != I) {
			PrintLiteral(', ')
		}
	}
}

i64[20] GlobalArray

define void Dummy() {
	Print(",%i", GlobalArray[10])
}

struct Test {
	i64 A,
	i64 B
}

struct ExtraText {
	i8[200] Text
}

/* /* Nested */ comment /* c /* o /* m /* m */ e */ n */ t */ */

; /* /* Nested */ comment /* c /* o /* m /* m */ e */ n */ t */ */
;;;;;;;;;;;;; coment

/* /* Nested */ comment ;;;;;;; /* c /* o /* m /* m */ e */ n */ t */ */

define i32 Test2() {
	return 1 << 2 & 10000000
}

define i32 Main() {
	PrintHex('aaaaaaaa') ; This flavor of comment should work
	PrintLiteral(', ')
	PrintHex('aaaaaaa');even without the whitespace
	PrintLiteral(', ')
	PrintHex('aaaaa')
	PrintLiteral(', ')
	PrintHex('aaaa')
	PrintLiteral(', ')
	PrintHex('aaa')
	PrintLiteral(', ')
	PrintHex('aa')
	PrintLiteral(', ')
	PrintHex('a')
	
	PrintLiteral(' ')
	
	VATest(10, 1)
	VATest(10, 1, 2, 3)
	
	PrintCharacter(' ')
	
	i8[90] test_array
	
	test_array[2] := 90
	test_array[89] := 20
	
	Print("%x,%i", test_array[2], test_array[89])
	
	GlobalArray[10] := 10
	Dummy()
	
	Print(",%i", #ExtraText)
	
	Test* `BestFit` := Test*{5754784}
	i32 `Best Fit Rating` := 2000011101
	
	;breakpoint:()
	
	i32 Result := 0
	auto pResult := &Result
	
	*pResult := 0xAA
	
	if (BestFit || `Best Fit Rating` < 200000) {
		;Print("1")
		i32 d := 1
		*pResult += 0x55
	}
	else {
		;Print("0")
		*pResult := 0
	}
	
	*pResult &= 1
	
	Print("%i", Result)
	
	Print(" \"\\ %i%i%i ", 0b1_1_0_1, 0xd, 13)
	
	ExtraText T
	
	T.Text[0] := 'h'
	T.Text[1] := 'i'
	T.Text[2] := 0
	
	Print("%s", T.Text)
	
	return 0
}
