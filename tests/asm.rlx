#Include ./src/lib/Memory.rlx
#Include ./src/lib/String.rlx
#Include ./src/lib/Console.rlx

define i64 ReturnParam(i64 A, i64* B) {
	asm {
		mov, {rsi} as i8*, di
		mov, rax, rdi
		mov, ax, 90
		
		mov, si, di
		mov, six, dix
	}
}
define i32 Abc(i64 a) {
	asm {
		mov, rax, rdi
		:start
		dec, rax
		test, rax, rax
		jnz, :start
	}
}
define i32 IncRAX() asm {
	push, rax
	xchg, rbx, {rsp} as i64*
	inc, rbx
	xchg, rbx, {rsp} as i64*
	pop, rax
	ret
}

define i32 ReturnAddNumber(i32 Number) asm {
	mov, eax, edi
	call, @IncRAX
	ret
}

define i32 Main() {
	i64 B := ReturnAddNumber(696968)
	
	Print(B)
	PrintCharacter(',')
	Print(ReturnParam(9000000, &B))
	PrintCharacter(',')
	Print(B)
	PrintCharacter(',')
	Print(Abc(1))
	
	asm {mov, rax, 0}
}
