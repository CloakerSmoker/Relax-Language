#Require ./src/lib/Memory.rlx
#Require ./src/lib/Console.rlx

struct Test {
	i64 Value,
	
	declare void Test(),
	
	define i64 Common() {
		return 300
	},
	
	define i64 GetValue() {
		return this->Value
	},
	define i64 GetValue(i8 Pass) {
		return Pass
	},
	define void SetValue(i64 New) {
		this->Value := New
	},
	
	define void Test() {
		this->Common()
		return
	}
	
	static void New(i64 Abc) {
		return
	}
	
	static Test* New() {
		return Alloc(#Test)
	}
}

struct BadIdea {
	define i64 What() {
		return 90
	}
}

define i32 Main() {
	Test* T := Test:New()
	
	Print(T->GetValue())
	
	T->SetValue(20059)
	
	PrintCharacter(',')
	
	Print(T->GetValue())
	
	PrintCharacter(' ')
	
	Test L
	
	L.SetValue(0)
	
	Print(L.GetValue())
	
	PrintCharacter(',')
	
	L.SetValue(20060)
	
	Print(L.GetValue())
	
	PrintCharacter(' ')
	BadIdea* B := null
	Print(B->What())
	
	PrintCharacter(' ')
	
	Print(L.GetValue(90))
	
	;i32 D := L.GetValue()
	
	return 0
}
