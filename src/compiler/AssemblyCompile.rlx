

define void CompileInstruction(CompilerState* cState, InstructionNode* ToCompile) {
	Instruction* Base := ToCompile->Base
	
	i8 Mode := 0
	i8 Reg := 0
	i8 RM := 0
	
	i8 SIB := 0
	
	i8 Disp8 := 0
	i32 Disp32 := 0
	
	
	
	for (i32 Index := 0, Index < 2, Index += 1) {
		InstructionOperand* NextOperand := ToCompile->Operands[Index]
		
		if !(NextOperand) {
			break
		}
		
		
	}
	
	
}

define void CompileAssembly(CompilerState* cState, AssemblyBlock* ToCompile) {
	for (i32 InstructionIndex := 0, InstructionIndex < ToCompile->InstructionCount, InstructionIndex += 1) {
		CompileInstruction(cState, ToCompile->Instructions[InstructionIndex])
	}
}