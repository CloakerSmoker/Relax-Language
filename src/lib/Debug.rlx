#Require "./src/lib/Console.rlx"
#Require "./src/lib/Exception.rlx"

define void PrintStackDump(i32 IgnoreFrames) {
	StackFrame* Last := GetRBP() As StackFrame*
	i32 Index := 1
	
	while (Last) {
		if (Last->LastFrame & 1) {
			StackFrame* Temp := Last->LastFrame - 1
			
			if (IgnoreFrames) {
				IgnoreFrames -= 1
			}
			else {
				Print("	^10Stack[%i]^F0 ^D0Try catch address^F0 = %x\n", Index, Last->ReturnAddress, Temp)
				Index += 1
			}
			
			Last := Temp
		}
		else {
			if (IgnoreFrames) {
				IgnoreFrames -= 1
			}
			else {
				Print("	^10Stack[%i]^F0 ^B0Fn callsite^F0 = %x\n", Index, Last->ReturnAddress, Last->LastFrame)
				Index += 1
			}
			
			Last := Last->LastFrame
		}
	}
}
define void PrintStackDump() {
	PrintStackDump(0)
}

define void UnhandledExceptionHandler(i64 Code) {
	Print("\n\n^40----------------------^F0\n")
	Print("^40Unhandled exception ^F0%x^40 with call stack:^F0\n", Code)
	PrintStackDump(3)
	Print("^40Aborting...^F0\n")
	Print("^40----------------------^F0\n\n\n")
}

define void* DebugInsertUnhandledExceptionHandler() {
	UnhandledExceptionHandler := &UnhandledExceptionHandler
	return null
}

void* DummyDebugHandler := DebugInsertUnhandledExceptionHandler()